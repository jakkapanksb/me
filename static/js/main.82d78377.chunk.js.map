{"version":3,"sources":["App.tsx","serviceWorkerWindow.ts","index.tsx"],"names":["App","className","style","backgroundColor","color","padding","fontSize","cursor","a","navigator","wb","Workbox","process","addEventListener","event","console","log","isUpdate","registration","waiting","messageSW","type","register","ReactDOM","render","StrictMode","document","getElementById","serviceWorker"],"mappings":"mMAyBeA,MArBf,WACE,OACE,yBAAKC,UAAU,aACb,yBACEC,MAAO,CACLC,gBAAiB,QACjBC,MAAO,QACPC,QAAS,EACTC,SAAU,KAGZ,kBAAC,IAAD,CAAeJ,MAAO,CAAEK,OAAQ,cAElC,8CACA,yBAAKN,UAAU,cACb,sD,0ECjBD,8BAAAO,EAAA,2DACD,kBAAmBC,WADlB,uBAEGC,EAAK,IAAIC,IAAJ,UAAeC,GAAf,wBAGRC,iBAAiB,aAAa,SAACC,GAChCC,QAAQC,IAAR,qBAA0BF,EAAMG,WAC3BH,EAAMG,YAKbP,EAAGG,iBAAiB,aAAa,SAACC,GAChCC,QAAQC,IAAI,aAGPF,EAAMG,UACTF,QAAQC,IAAI,mDAOhBN,EAAGG,iBAAiB,WAAW,SAACC,GAC9BC,QAAQC,IACN,4HAGEE,GAAgBA,EAAaC,SAC/BC,YAAUF,EAAaC,QAAS,CAAEE,KAAM,oBA9BzC,SAkCkBX,EAAGY,WAlCrB,OAkCHJ,EAlCG,mD,sBCKPK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDTnB,WAAP,wBCeAC,I","file":"static/js/main.82d78377.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AiOutlineMenu } from 'react-icons/ai';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='container'>\r\n      <div\r\n        style={{\r\n          backgroundColor: 'black',\r\n          color: 'white',\r\n          padding: 5,\r\n          fontSize: 20,\r\n        }}\r\n      >\r\n        <AiOutlineMenu style={{ cursor: 'pointer' }} />\r\n      </div>\r\n      <p>Hello Klaisuban</p>\r\n      <div className='slide-left'>\r\n        <p>CSS slide-in text...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { Workbox, messageSW } from 'workbox-window';\r\n\r\nexport async function register() {\r\n  if ('serviceWorker' in navigator) {\r\n    const wb = new Workbox(`${process.env.PUBLIC_URL}/service-worker.js`);\r\n    let registration: ServiceWorkerRegistration | undefined;\r\n\r\n    wb.addEventListener('installed', (event) => {\r\n      console.log(`installed: ${event.isUpdate}`);\r\n      if (!event.isUpdate) {\r\n        // First-installed code goes here...\r\n      }\r\n    });\r\n\r\n    wb.addEventListener('activated', (event) => {\r\n      console.log('activated');\r\n      // `event.isUpdate` will be true if another version of the service\r\n      // worker was controlling the page when this version was registered.\r\n      if (!event.isUpdate) {\r\n        console.log('Service worker activated for the first time!');\r\n\r\n        // If your service worker is configured to precache assets, those\r\n        // assets should all be available now.\r\n      }\r\n    });\r\n\r\n    wb.addEventListener('waiting', (event) => {\r\n      console.log(\r\n        `A new service worker has installed, but it can't activate` +\r\n          `until all tabs running the current version have fully unloaded.`\r\n      );\r\n      if (registration && registration.waiting) {\r\n        messageSW(registration.waiting, { type: 'SKIP_WAITING' });\r\n      }\r\n    });\r\n\r\n    registration = await wb.register();\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport * as serviceWorker from './serviceWorkerWindow';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}